name: build
on: [push]
env:
  # A fixed version used for testing, so that the builds don't
  # spontaneously break after a few years.
  RUST_VERSION: "1.53.0"
jobs:
  # Checks syntax formatting.
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Run basic code validity check.
  check:
    needs: fmt
    name: Check
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  # Run tests.
  test:
    needs: check
    name: Test Suite (linux)
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  # Run tests on macOS.
  test-macos:
    needs: check
    name: Test Suite (macOS)
    runs-on: macos-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  # Run tests on Windows.
  test-windows:
    #needs: check
    name: Test Suite (windows)
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-D warnings"
    defaults:
      run:
        shell: msys2 {0}
    steps:
      #- name: Install `gmp` library.
      #  run: vcpkg install gmp
      #- name: Integrate vcpkg.
      #  run: vcpkg integrate install
      #- name: Run vcpkg
      #  uses: lukka/run-vcpkg@v4
      #  with:
      #    doNotCache: true
      #    vcpkgArguments: 'gmp'
      #    vcpkgDirectory: '${{ github.workspace }}/vcpkg'
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gmp
            make
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  # Checks code style.
  clippy:
    needs: check
    name: Clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy